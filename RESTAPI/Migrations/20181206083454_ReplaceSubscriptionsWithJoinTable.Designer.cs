// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RESTAPI.Data;

namespace RESTAPI.Migrations
{
    [DbContext(typeof(RESTAPIContext))]
    [Migration("20181206083454_ReplaceSubscriptionsWithJoinTable")]
    partial class ReplaceSubscriptionsWithJoinTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RESTAPI.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number");

                    b.Property<string>("Street");

                    b.HasKey("AddressId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("RESTAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("RESTAPI.Models.Establishment", b =>
                {
                    b.Property<int>("EstablishmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId");

                    b.Property<string>("ImgPath");

                    b.Property<int?>("StoreId");

                    b.Property<int>("Visited");

                    b.HasKey("EstablishmentId");

                    b.HasIndex("AddressId");

                    b.HasIndex("StoreId");

                    b.ToTable("Establishment");
                });

            modelBuilder.Entity("RESTAPI.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<int?>("EstablishmentId");

                    b.Property<string>("Name");

                    b.Property<int>("Visited");

                    b.HasKey("EventId");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("RESTAPI.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("StoreId");

                    b.Property<int>("Visited");

                    b.HasKey("PromotionId");

                    b.HasIndex("StoreId");

                    b.ToTable("Promotion");
                });

            modelBuilder.Entity("RESTAPI.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("ImgPath");

                    b.Property<string>("Name");

                    b.HasKey("StoreId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("RESTAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RESTAPI.Models.UserEstablishment", b =>
                {
                    b.Property<int?>("UserId");

                    b.Property<int?>("EstablishmentId");

                    b.HasKey("UserId", "EstablishmentId");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("UserEstablishment");
                });

            modelBuilder.Entity("RESTAPI.Models.Establishment", b =>
                {
                    b.HasOne("RESTAPI.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("RESTAPI.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("RESTAPI.Models.Event", b =>
                {
                    b.HasOne("RESTAPI.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId");
                });

            modelBuilder.Entity("RESTAPI.Models.Promotion", b =>
                {
                    b.HasOne("RESTAPI.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("RESTAPI.Models.Store", b =>
                {
                    b.HasOne("RESTAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("RESTAPI.Models.UserEstablishment", b =>
                {
                    b.HasOne("RESTAPI.Models.Establishment", "Establishment")
                        .WithMany("SubscribedUsers")
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RESTAPI.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
